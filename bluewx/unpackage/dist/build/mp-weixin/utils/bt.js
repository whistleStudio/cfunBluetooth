"use strict";var e=require("../common/vendor.js"),i={devId:void 0,svId:void 0,chaId:void 0,init:()=>new Promise(((i,s)=>{e.index.openBluetoothAdapter({success(e){console.log("😀success---",e),i(e)},fail(e){console.log("😔---",e),o("当前蓝牙不可用"),s(e)}})})),search:()=>new Promise(((i,s)=>{e.index.startBluetoothDevicesDiscovery({success(e){console.log("search--",e),i(e)},fail(e){console.log(e),s(e)}})})),stopSearch(){s()},async connectDev(i){this.devId=i;try{return await(c=this.devId,new Promise(((i,s)=>{e.index.createBLEConnection({deviceId:c,success(e){console.log(e),i(e)},fail(e){s(e)}})}))),s(),this.svId=await function(i){return new Promise(((s,o)=>{setTimeout((()=>{e.index.getBLEDeviceServices({deviceId:i,success(e){let i;console.log("device services:",e.services);for(let s of e.services)if(s.isPrimary){i=s.uuid;break}i?s(i):o("no primary service")},fail(e){o(e)}})}),1e3)}))}(this.devId),this.chaId=await function(i,s){return new Promise(((o,c)=>{e.index.getBLEDeviceCharacteristics({deviceId:i,serviceId:s,success(e){var i;let s;console.log("device getBLEDeviceCharacteristics:",e.characteristics);for(let o of e.characteristics)if(null==(i=null==o?void 0:o.properties)?void 0:i.write){s=o.uuid;break}s?o(s):c("no write characteristic")},fail(e){console.log(e)}})}))}(this.devId,this.svId),!0}catch(t){return o("设备连接异常"),console.log("connect fail -- ",t),!1}var c},disconnectDev(){this.devId&&e.index.closeBLEConnection({deviceId:this.devId,success(e){console.log(e)},fail(e){console.log(e)}})},closeBtAdapter(){e.index.closeBluetoothAdapter({success(e){console.log(e)}})},writeBuffer(i){e.index.writeBLECharacteristicValue({deviceId:this.devId,serviceId:this.svId,characteristicId:this.chaId,value:i,success(e){console.log("writeBLECharacteristicValue success",e.errMsg)},fail(e){console.log("writeBLECharacteristicValue fail: ",e)}})},onBtAdapterSta(i=(()=>{})){e.index.onBluetoothAdapterStateChange((function(e){e.available||(i(),o("当前蓝牙不可用"))}))},onFound(i){e.index.onBluetoothDeviceFound((function(e){var s;if(null==(s=null==e?void 0:e.devices[0])?void 0:s.name){let s=e.devices[0];console.log("new device list has founded"),console.dir(e),i.push({name:s.name,deviceId:s.deviceId})}}))}};function s(){console.log("stopDiscovery"),e.index.stopBluetoothDevicesDiscovery({success(e){console.log(e)}})}function o(i,s="error"){e.index.showToast({title:i,icon:s})}exports.bt=i;
